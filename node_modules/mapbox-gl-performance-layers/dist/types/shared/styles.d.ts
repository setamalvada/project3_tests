import { Feature } from 'geojson';
import { Geometry } from 'geojson';
export interface Color {
    r: number;
    g: number;
    b: number;
}
export interface PointStyle {
    size: number;
    color: Color;
    opacity: number;
    outlineSize: number;
    outlineColor: Color;
    outlineOpacity: number;
}
export interface LineStyle {
    size: number;
    color: Color;
    opacity: number;
    outlineSize: number;
    outlineColor: Color;
    outlineOpacity: number;
}
export interface PolygonStyle {
    color: Color;
    opacity: number;
    outlineSize: number;
    outlineColor: Color;
    outlineOpacity: number;
}
export declare const defaultPointStyle: Readonly<PointStyle>;
export declare const defaultLineStyle: Readonly<LineStyle>;
export declare const defaultPolygonStyle: Readonly<PolygonStyle>;
export declare type StyleOption<G extends Geometry, P, S extends {}> = ((feature: Feature<G, P>) => Partial<S>) | Partial<S> | undefined;
export declare function resolveStyle<G extends Geometry, P, S extends {}>(output: S, feature: Feature<G, P>, styleOption: StyleOption<G, P, S>, defaultStyle: Readonly<S>): void;
export declare function resolvePointStyle<G extends Geometry, P>(output: PointStyle, feature: Feature<G, P>, styleOption: StyleOption<G, P, PointStyle>): void;
export declare function resolveLineStyle<G extends Geometry, P>(output: LineStyle, feature: Feature<G, P>, styleOption: StyleOption<G, P, LineStyle>): void;
export declare function resolvePolygonStyle<G extends Geometry, P, S extends {}>(output: PolygonStyle, feature: Feature<G, P>, styleOption: StyleOption<G, P, PolygonStyle>): void;
