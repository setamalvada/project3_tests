/// <reference types="mapbox-gl" />
import { FeatureCollection } from 'geojson';
import { Geometry } from 'geojson';
import { Renderer } from './renderer';
import { StyleOption } from '../../shared/styles';
import { TileRendererOptions } from '../../shared/tile/tile-renderer';
import * as glMatrix from 'gl-matrix';
export declare class TiledRenderer<G extends Geometry, P, S extends {}> implements Renderer<G, P, S> {
    private renderer;
    private tileRenderer;
    private readonly dataBounds;
    constructor(renderer: Renderer<G, P, S>, options: TileRendererOptions);
    setDataAndStyle(data: FeatureCollection<G, P>, styleOption: StyleOption<G, P, S>): void;
    clearData(): void;
    initialise(map: mapboxgl.Map, gl: WebGLRenderingContext): void;
    dispose(map: mapboxgl.Map, gl: WebGLRenderingContext): void;
    prerender(): void;
    render(gl: WebGLRenderingContext, matrix: glMatrix.mat4 | number[]): void;
}
