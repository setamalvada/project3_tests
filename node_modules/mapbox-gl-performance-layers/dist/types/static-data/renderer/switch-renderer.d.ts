/// <reference types="mapbox-gl" />
import { FeatureCollection } from 'geojson';
import { Geometry } from 'geojson';
import { Renderer } from './renderer';
import { StyleOption } from '../../shared/styles';
import * as glMatrix from 'gl-matrix';
export interface SwitchOption<G extends Geometry, P, S extends {}> {
    renderer: Renderer<G, P, S>;
    condition: (data: FeatureCollection<G, P>) => boolean;
}
export declare class SwitchRenderer<G extends Geometry, P, S extends {}> implements Renderer<G, P, S> {
    private options;
    private map;
    private gl;
    private currentOption;
    constructor(options: SwitchOption<G, P, S>[]);
    setDataAndStyle(data: FeatureCollection<G, P>, styleOption: StyleOption<G, P, S>): void;
    clearData(): void;
    initialise(map: mapboxgl.Map, gl: WebGLRenderingContext): void;
    dispose(map: mapboxgl.Map, gl: WebGLRenderingContext): void;
    prerender(gl: WebGLRenderingContext, matrix: glMatrix.mat4 | number[]): void;
    render(gl: WebGLRenderingContext, matrix: glMatrix.mat4 | number[]): void;
}
