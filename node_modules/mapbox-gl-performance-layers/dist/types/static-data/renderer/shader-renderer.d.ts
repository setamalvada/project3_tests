/// <reference types="mapbox-gl" />
import { FeatureCollection } from 'geojson';
import { Geometry } from 'geojson';
import { Renderer } from './renderer';
import { Shader } from '../../shared/shader/shader';
import { VertexDataMapper } from '../vertex-data-mapper/vertex-data-mapper';
import { StyleOption } from '../../shared/styles';
import * as glMatrix from 'gl-matrix';
export declare class ShaderRenderer<G extends Geometry, P, S extends {}> implements Renderer<G, P, S> {
    private shader;
    private vertexDataMapper;
    private program;
    private arrayBuffer;
    private elementArrayBuffer;
    private array;
    private elementArray;
    constructor(shader: Shader, vertexDataMapper: VertexDataMapper<G, P, S>);
    setDataAndStyle(data: FeatureCollection<G, P>, styleOption: StyleOption<G, P, S>): void;
    clearData(): void;
    initialise(map: mapboxgl.Map, gl: WebGLRenderingContext): void;
    dispose(map: mapboxgl.Map, gl: WebGLRenderingContext): void;
    prerender(): void;
    render(gl: WebGLRenderingContext, matrix: glMatrix.mat4 | number[]): void;
}
