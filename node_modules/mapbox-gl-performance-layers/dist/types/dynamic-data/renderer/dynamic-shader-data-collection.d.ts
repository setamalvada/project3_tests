import { Feature } from 'geojson';
import { Geometry } from 'geojson';
import { BaseDataOperations } from '../data-operations';
import { StyleOption } from '../../shared/styles';
import { DynamicVertexDataMapper } from '../vertex-data-mapper/dynamic-vertex-data-mapper';
export declare class DynamicShaderDataCollection<G extends Geometry, P, S extends {}> implements BaseDataOperations<Feature<G, P>> {
    private vertexDataMapper;
    private styleOption;
    private features;
    private buffer;
    private startIndex;
    private endIndex;
    constructor(vertexDataMapper: DynamicVertexDataMapper<G, P, S>, startingBufferSize: number);
    add(feature: Feature<G, P>): void;
    removeFirst(): Feature<G, P> | null;
    removeLast(): Feature<G, P> | null;
    clear(): void;
    setStyle(styleOption: StyleOption<G, P, S>): void;
    private resetBuffer;
    getArray(): ReadonlyArray<Feature<G, P>>;
    getVertexArray(): Float32Array;
    getStartIndex(): number;
    getEndIndex(): number;
}
