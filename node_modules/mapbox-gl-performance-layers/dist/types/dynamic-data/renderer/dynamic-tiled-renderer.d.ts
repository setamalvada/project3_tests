/// <reference types="mapbox-gl" />
import { Feature } from 'geojson';
import { Geometry } from 'geojson';
import { DynamicRenderer } from './dynamic-renderer';
import { DataOperations } from '../data-operations';
import { StyleOption } from '../../shared/styles';
import { TileRendererOptions } from '../../shared/tile/tile-renderer';
import * as glMatrix from 'gl-matrix';
export declare class DynamicTiledRenderer<G extends Geometry, P, S extends {}> implements DynamicRenderer<G, P, S> {
    private renderer;
    private tileRenderer;
    private readonly dataBounds;
    private readonly tempBounds;
    constructor(renderer: DynamicRenderer<G, P, S>, options: TileRendererOptions);
    dataOperations: DataOperations<Feature<G, P>>;
    setStyle(styleOption: StyleOption<G, P, S>): void;
    initialise(map: mapboxgl.Map, gl: WebGLRenderingContext): void;
    dispose(map: mapboxgl.Map, gl: WebGLRenderingContext): void;
    prerender(): void;
    render(gl: WebGLRenderingContext, matrix: glMatrix.mat4 | number[]): void;
    private handleDataChange;
}
